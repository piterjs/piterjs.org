285 *
	title \Пиратское радио на NodeJS
	description \
	speaker \recIY5ZAjN7crAxZ8
	duration \PT40m
	slides \https://fs.piterjs.org/events/34/gorshkov.pdf
t8T *
	title \HTML формы как таковые
	description \
	speaker \recvlQCn9XmdavSGc
	duration \PT40m
	video \https://www.youtube.com/watch?v=TO5kl_GBQ20
DQ6 *
	title \Тулинг для разработки на Vue
	description \Поднятие проекта на Vue требует сборки через webpack, сервер разработки с HMR, бандлинг приложения, линтинг, и много других вещей, отвлекающих от написания самого приложения. В докладе обсудим доступный тулинг для решения этих задач и что в нем можно улучшить. А также как настроить его под себя, чтобы получать удовольствие от разработки.
	speaker \recfz0dnUIt21jmSY
	duration \PT40m
	slides \https://fs.piterjs.org/events/30/kopylov/index.html
PB0 *
	title \A headless butler
	description \
	speaker \recFU3I8wHQ84UeHN
	duration \PT40m
YAQ *
	title \Cache it right
	description \O современных практиках по работе c различными ресурсами в веб-пространстве. Как, с одной стороны, сделать пользовательский опыт максимально позитивным, а с другой стороны – приложение, которое при этом будет очень быстро работать? 
	speaker \recgGeg88qh0RjWHR
	duration \PT40m
FaK *
	title \Трансдьюсеры в JS
	description \
	speaker \recMyhW0lj70UfzWh
	duration \PT40m
	video \https://www.youtube.com/watch?v=CzY1fBeT0kY
6sj *
	title \Puppeteer SSR как способ отказаться от React и двигаться дальше
	description \
	speaker \recKmgePAocZHwGim
	duration \PT40m
	video \https://www.youtube.com/watch?v=bcNDItJjnmk
BsQ *
	title \React Native Desktop
	description \
	speaker \recJyeOUmJEYzF5pQ
	duration \PT40m
	video \https://www.youtube.com/watch?v=3lSUKW6KK0I
jQW *
	title \React Hooks: Bump or Sage
	description \Кратко обсудим что такое React Hooks, для чего они нужны, что привносят. И постараемся ответить на вопрос,  это прорыв или провал.
	speaker \rec7uZUA6k33fG0Yz
	duration \PT40m
YxX *
	title \Vue.js higher order components
	description \
	speaker \recUgle4hH2aCoUVk
	duration \PT40m
	video \https://www.youtube.com/watch?v=tU3YIENFU3E
YJq *
	title \Скажи ревьюеру “Нет!”
	description \
	speaker \rec9hJg8f4sIfUnAS
	duration \PT40m
	slides \https://fs.piterjs.org/events/34/gerasimov.pdf
GWi *
	title \Изоморфные приложения на Vue
	description \
	speaker \recNAhJ2NdfwOIJF1
	duration \PT40m
	video \https://www.youtube.com/watch?v=UhPuIahns18
YOr *
	title \Гатсби — больше чем генератор сайтов
	description \
	speaker \recjo6MB9fFVjpBj8
	duration \PT40m
	slides \https://fs.piterjs.org/events/34/novikov.pdf
ZxX *
	title \Как я начал любить Vue
	description \
	speaker \recYz08iYOUsb801P
	duration \PT40m
7wy *
	title \Микросервисы на Node.js: как сохранить себя
	description \
		\Две истории про разработку на микросервисах: одна закончилась провалом, другая — success story. Из доклада можно будет узнать различные варианты перехода с монолита на микросервисы и организации инфраструктуры микросервисов, несколько способов сэкономить нервы при написании кода микросервиса, а также некоторые проблемы и преимущества Node.js. В конце — вывод, почему микросервисы можно применять и когда это дает результат.
		\
		\Технологии: Node.js, RabbitMQ, REST API, Mongo, PostgreSQL.
	speaker \recNuTExXo6paisad
	duration \PT40m
	slides \https://dl.airtable.com/pVzTr7x6QAaiNMCUMEGz_Kirill_Sergeev_Mikroservisi_na_Nodejs_kak_sohranit_sebya.pdf
	video \https://youtu.be/8cZVglIbS0U
VSc *
	title \Анализ уязвимостей процесса аутентификации
	description \Рассмотрим несколько векторов атаки на процесс аутентификации для получения данных о пользователях системы, некоторые ошибочные подходы в контексте node.js и попытаемся поразмышлять об оптимальных способах защиты от утечки информации. В частности, поговорим про post vs get, crypto vs bcrypt, юзабилити vs безопасность.
	speaker \recN6GhIZP9QQ7Fo9
	duration \PT40m
	slides \https://fs.piterjs.org/events/33/gorbachev.pdf
	video \https://ok.ru/live/1113612426810¡
FKb *
	title \JavaScript в большом проекте: основные проблемы и наш рецепт их решения
	description \
	speaker \recv7r5J5T7Sh1GyR
	duration \PT40m
	video \https://www.youtube.com/watch?v=Ak6dI1_ZaEI
xsC *
	title \Разработка компилятора на LLVM#2 — StaticScript
	description \Это второй доклад из серии докладов которые будут посвящены разработке компилятора “TypeScript” используя LLVM в качестве backend, и TypeScript в качестве frontend.
	speaker \recX0NdhNVdZ2s18p
	duration \PT40m
	slides \https://fs.piterjs.org/events/33/patsura.pdf
fLz *
	title \Типизация Rest API
	description \
	speaker \receifdi4FmxwH3nF
	duration \PT40m
cu5 *
	title \Broccoli — функциональный ассет-менеджмент веб приложений
	description \
	speaker \recPlcsUKJ6w7MPgg
	duration \PT40m
	slides \https://fs.piterjs.org/events/31/kanunnikov.pdf
T4i *
	title \Исчезающие фреймворк
	description \Разберемся, зачем в действительности мы используем фреймворки, и почему классические фреймворки подходят не для всех проектов. Поговорим о новом тренде "исчезающих фреймворков" на примере SvelteJS, и почему это не «yet another javascript framework».
	speaker \recCbrhFv0SUAL2d3
	duration \PT40m
MZ5 *
	title \Стабильно работающий код
	description \
	speaker \recHfk5ryFmvkmfoG
	duration \PT40m
	slides \https://fs.piterjs.org/events/34/avdey.pdf
KW7 *
	title \Как я начал любить Vue
	description \
	speaker \rectujLHstJe4RG99
	duration \PT40m
	video \https://www.youtube.com/watch?v=9wHZuPE4Nl0
RcA *
	title \Vue в ecommerce-системах для малого и среднего бизнеса
	description \Расскажу про то, как можно использовать Vue в ecommerce при низком бюджете и о том, с какими подводными камнями придется столкнуться.
	speaker \recFFfDnmdRM5Sybp
	duration \PT40m
	slides \https://fs.piterjs.org/events/30/ulyanov.pdf
ttR *
	title \Качество кода: внедрение проверок в legacy
	description \
	speaker \rec9eJ0naBFJQ0vHg
	duration \PT40m
Cl4 *
	title \Разработка компилятора на LLVM#1
	description \
	speaker \recX0NdhNVdZ2s18p
	duration \PT40m
	slides \https://fs.piterjs.org/events/31/patsura.pdf
DQF *
	title \Nuxt ^2.7: хороший и плохой
	description \
	speaker \recaWGjJjWTwTCEeS
	duration \PT40m
MPo *
	title \Vue: что такое хорошо и что такое плохо
	description \Все программисты стараются писать хорошо, в меру собственного разумения. У кого-то получается лучше, у кого-то хуже, но ошибки делают все. Vue.js - фреймворк, дружественный к новичкам, и прощает многое. За два с половиной года в крупном проекте на Vue, который делался в основном начинающими - выплывало многое. В этом докладе я рассмотрю типичные ошибки в использовании Vue.js, и как их избежать и сделать всё правильно.
	speaker \recn5LnSfVTaawFAX
	duration \PT40m
	slides \https://dl.airtable.com/caYMml4ASHioLj3NXOUS_zlygin.pdf
1gV *
	title \Собираем свой Google Static Maps
	description \
	speaker \recNAZ79tUcjJtZMM
	duration \PT40m
	video \https://www.youtube.com/watch?v=kDFEsjaRScM
WIQ *
	title \i18n без боли
	description \
	speaker \rec8HARMrfaU3kvEX
	duration \PT40m
uAC *
	title \Этот безумный, безумный, безумный, безумный инпут. Часть 1
	description \
		\Строка поиска — самый распространенный и удобный способ навигации по сайту. Казалось бы, что может быть проще? Но на практике создание такой строки в приложении, написанном на React, оказывается не самой простой задачей, ведь поиск должен работать на мобильных устройствах и быть доступным.
		\
		\В этом докладе Роман расскажет про свой опыт создания компонента поисковой строки, начиная с привычек и ожиданий пользователей и продолжая архитектурой всего компонента.
	speaker \recO0fk2FEJbcvhcG
	duration \PT40m
	slides \https://dl.airtable.com/JGdHBMpETA2DG7eEch4v_Roman_Prudnikov_It_s_a_mad_mad_mad_mad_search_bar_pt_1.pdf
	video \https://youtu.be/r8UTkmx_LBY
9CO *
	title \ФРП, биология, фронтенд
	description \Все, что вы хотели узнать о функционально-реактивном программировании во фронтенде, но боялись спросить — понятным и доступным языком на примере библиотеки RxJS. Поговорим о том, как фронтенд делает жизнь биологов проще, а ФРП делает проще жизнь фронтендера, и посмотрим на применение функционально-реактивной парадигмы в наших приложениях.
	speaker \recesVf2H9nqo8cIk
	duration \PT40m
	slides \https://fs.piterjs.org/events/31/yarantseva.pdf
acQ *
	title \Application deployment with Firebase platform
	description \
		\Основная цель доклада — ознакомить разработчиков со всеми преимуществами платформы Google Firebase. Мы опишем основные отличия таких продуктов, как Cloud Firestore vs Realtime Database. Покажем, какие возможности проектирования БД Cloud Firestore на примере реального приложения. Также покажем, как построить микросервисы с помощью Firebase Cloud Functions и Cloud Hosting на примере реального приложения.
		\
		\Стек технологий при проведении доклада:
		\
		\Angular 4+;
		\FireBase platform;
		\nodes.
	speaker \recV2XkmYneUMvLVQ
	duration \PT40m
1nm *
	title \Полный стек технологий БЭМ
	description \
	speaker \recHBjBpHVYHBeG0m
	duration \PT40m
	video \https://www.youtube.com/watch?v=VsGl-xZtxFg
0GJ *
	title \Svelte
	description \
	speaker \recimZihpaesmiYqG
	duration \PT40m
86e *
	title \Storybook или Как фронтендеры изобретали чистые функции с TDD
	description \
	speaker \recBvy9W7RkucECri
	duration \PT40m
slides *
	title \Презентация приложения для проведения презентаций
	description \Расскажу сколько всего умеет, как работает, и как сделать своё за один беспокойный вечер.
	speaker \rec1qqsT1cczrE6dH
	duration \PT40m
	video \https://www.youtube.com/watch?v=o13NncAQXWk
webgl-planet *
	title \Планета на WebGL
	description \Доклад для уставших от “формочек и кнопочек”. Расскажу немного основ по компьютерной графике и о том, как написать простой 3d рендер на WebGL без использования фреймворков и библиотек.
	speaker \vola
	duration \PT40m
	video \https://www.youtube.com/watch?v=4jS3RtzasS0
css-types *
	title \Типы данных в CSS
	description \Расскажу про типы данных в CSS3 и язык их описания. Будет много формального синтаксиса и интересных деталей.
	speaker \vals
	duration \PT40m
	video \https://www.youtube.com/watch?v=o3oFkckaJGo
react-ssr-wat *
	title \React + SSR там, где их уже не ждали
	description \Клиентский портал крупного европейского телекома. Разметка рендерится на Java бэкенде, а фронтенд - набор jQuery плагинов. Разработчики хотят изменений, но бизнес не заинтересован в радикальных изменениях. Как начать использовать React, чтобы никого не спугнуть? Как добавить к нему SSR, если большая часть портала все еще не на React?
	speaker \zona
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=41/speech=react-ssr-wat.pdf
	video \https://www.youtube.com/watch?v=27IMf0bG_78
bdd-e2e *
	title \BDD e2e тестирование
	description \Рассмотрим, что такое BDD тестирование, и как оно помогает писать e2e тесты дешевле и быстрее. Рассмотрим, как сделать тесты понятными не только для разработчиков, но и для тестировщиков с менеджерами, используя Gherkin синтаксис в связке с Cypress. Определим место acceptance тестов в CI/CD пайплайне. Обсудим, когда стоит писать такие тесты, и кто может это делать.
	speaker \iosa
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=41/speech=bdd-e2e.pdf
	video \https://www.youtube.com/watch?v=Ho_7LALqCi0
event-loop-details *
	title \Event-Driven Architecture: детали реализаций Event Loop
	description \
		\Событийно-ориентированная архитектура (EDA) является одним из важных подходов в нынешнем вебе. Именно данный подход позволил решить проблему c10k и был взят за основу взаимодействия с DOM.
		\
		\Какие проблемы были обозначены за 20 лет с момента определения? Что такое отравление обработчика? Как искать эти проблемы в своих приложениях? Ответим на эти вопросы в докладе.
		\
		\Также рассмотрим детали реализации event loop и microtasks. Заглянем в libuv, tokio.rs и chromuim. И разберем, как браузер держит TCP-соединение с сервером и как это контролировать.
	speaker \recN6GhIZP9QQ7Fo9
	duration \PT40m
	video \https://www.youtube.com/watch?v=ctKseRpZcKQ
js-logging *
	title \Логирование на JS
	description \
		\Опишу четыре основных способа для логирования. Их плюсы и минусы. Расскажу, какие на мой взгляд тулзы самые важные для этого, сравню их и дам дельные советы.
	speaker \recNuTExXo6paisad
	duration \PT55m
	slides \https://github.com/piterjs/slides/blob/master/meetup=42/speech=js-logging.pdf
	video \https://www.youtube.com/watch?v=HpQfpLaIK2E
api-documenting *
	title \Документация к API — делай это понятно
	description \
		\Тому, кто пишет backend на Node.js придется рано или поздно столкнуться с задачей документирования/описания API. Какие подходы существуют, какой инструмент выбрать? Стоит ли документировать, если проект маленький? Как актуализировать, поддерживать, хранить?
	speaker \recHfk5ryFmvkmfoG
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=42/speech=api-documenting.pdf
	video \https://www.youtube.com/watch?v=v-VXIYO5Lbs
ibeacon-with-react-native *
	title \Взаимодействие с iBeacons в React Native
	description \
		\Многие JS разработчики зачастую думают что для реализации проектов, связанных с реальным физическим миром, их знаний и технологий не достаточно. Хочу в очередной раз переубедить вас в этом и рассказать о том, как мы сделали проход в офис JetBrains с помощью BLE маяков и JS.
	speaker \recSJkANJgoAHmRu9
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=42/speech=ibeacon-with-react-native.pdf
	video \https://www.youtube.com/watch?v=5X5UOCtYB20
programming-is-a-lava *
	title \Программирование — это лава!
	description \В нас сидит очень требовательный и обидчивый идеалист, который хочет сделать самые универсальные решения, самую расширяемую архитектуру и самый красивый код. В докладе попробуем разобраться, почему быть таким идеалистом плохо, и как с ним договариваться.
	speaker \rec8HARMrfaU3kvEX
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=43/speech=programming-is-a-lava.pdf
new-view-on-architecture *
	title \Архитектура. Другой взгляд
	description \Если спросить десять человек о том, что они понимают под архитектурой, то можно получить 10 разных ответов. Я не хочу снимать противоречий или искать единственно правильное определение. Цель доклада — рассказать о своем представлении.
	speaker \recby7uMW0ZeHPQJJ
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=43/speech=new-view-on-architecture.pdf
write-this-tests *
	title \Напиши ты уже эти тесты
	description \Весь современный зоопарк технологий во фронтенде можно свести, на самом деле, к одному. Все подчиняется принципу декомпозиции. Даже если мы сами этого не замечаем, все мы работаем с компонентами. В докладе хочу привести соображения по поводу того, как стоит разрабатывать интерфейсы и API к компонентам, на что стоит обратить внимание и причем же тут тесты.
	speaker \carv
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=43/speech=write-this-tests.pdf
own-project-development *
	title \Разработка собственного проекта
	description \Как быть человеком оркестром, совместить в себе backend/frontend/mobile и дизайнера и сделать свой первый проект. Покажу, что и как сделано и расскажу, как делал.
	speaker \recX0NdhNVdZ2s18p
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=43/speech=own-project-development.pdf
express-essentials-with-ts *
	title \Express API — Essentials with TypeScript
	description \Доклад уровня смузи (введения в технологию) об основах написания API на языке TypeScript, используя Express, Mongoose и MongoDB. Поговорим о фильтрации, сортировке, валидации, связывании моделей, о том как написать универсальный обработчик запросов и масштабировать его на различные хранимые сущности. Упакуем все в docker и запустим на виртуальном сервере.
	speaker \yakup
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=44/speech=express-essentials-with-ts.pdf
should-test-be-integrational *
	title \Если нужен тест, пусть он будет интеграционным
	description \Когда речь заходит о тестировании приложений, часто упоминают пирамиду тестирования, которая наглядно представляет оптимальное соотношение разных типов тестов в проекте. Предполагается, что фундамент пирамиды — юнит тесты. Я расскажу о проблемах, с которыми мы столкнулись следуя этому принципу, и о том, как решили их, сместив акцент на интеграционные тесты.
	speaker \malv
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=44/speech=should-test-be-integrational.pdf
functional-errors-handling-in-ts *
	title \Функциональная обработка ошибок в TypeScript
	description \Рассмотрим применение монад (или подобных им идей) для обработки ошибок и упрощения разработки приложений на TypeScript. Для понимания доклада не требуется знание теории категорий, абстрактной алгебры и т.д. Достаточно понимать семантику TypeScript или подобных языков.
	speaker \shara
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=44/speech=functional-errors-handling-in-ts.pdf
storybook-pure-functions *
	title \Storybook или как фронтендеры изобретали чистые функции с TDD
	description \Я должен признаться — я бекендер до мозга костей. На работе я пишу на Python и обожаю его интерактивность, удобные песочницы, возможность выполнять любой код в любом окружении. Чуть больше года я писал в продакшн на Vue.js по нужде и по любви, и мне очень хотелось получить сравнимый опыт, получить возможность изолировано играться с компонентами, разрабатывать их в соответствии со строгой концепцией и читать Дэна Абрамова по вечерам. Так я открыл для себя Storybook и визуальный TDD, и теперь хочу про это вам рассказать. Мой доклад будет полезен сомневающимся бекендерам, новичкам-фронтендерам и тем, у кого руки до сих пор не дошли до Storybook. Проведу аналогии с бекенд-разработкой на Python, разберу основные концепции, библиотеки и инструменты, покажу и расскажу где находить годную информацию.
	speaker \recBvy9W7RkucECri
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=45/speech=storybook-pure-functions.pdf
css-value-processing *
	title \CSS value processing
	description \Разберу процесс вычисления значения CSS свойства от строчки в стилях до изображения на экране.
	speaker \vals
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=45/speech=css-value-processing.pdf
styled-styles *
	title \Стильные стили
	description \Рассмотрю различные подходы стилизации в компонентном мире. Что выбрать из BEM, CSS modules, CSS-in-JS? Что из этого серебряная пуля, и есть ли она вообще?
	speaker \efimova
	duration \PT45m
	slides \https://github.com/piterjs/slides/blob/master/meetup=45/speech=styled-styles.pdf
complex-components-dev *
	title \Разработка сложных компонентов: деливерим быстро, поддерживаем легко
	description \На реальном примере рассмотрю принципы разработки сложных UI-компонентов, которые помогут сохранить быстрый ТТМ и упростят поддержку кода. Расскажу, почему компонент — это песочница, как быть с fancy-фичей и чем хорош подход «не объединяй и властвуй».
	speaker \pyatakovr
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=46/speech=complex-components-dev.pdf
high-performance-web-applications *
	title \High performance web applications
	description \Как писать быстрые и отзывчивые приложения? Что вообще можно разработать внутри браузера в 2020? Поговорим о производительности, различных техниках, что стоит делать, а что нет. А в заключение посмотрим, что нас ждёт в недалеком будущем.
	speaker \zatravkini
	slides \https://github.com/piterjs/slides/blob/master/meetup=46/speech=high-performance-web-applications.pdf
	duration \PT35m
mol-style *
	title \Продвинутый CSS-in-TS
	description \Расскажу про библиотеку $mol_style, которая анализирует структуру приложения и позволяет писать статически валидируемые вложенные селекторы.
	speaker \rec1qqsT1cczrE6dH
	duration \PT35m
	slides \https://github.com/piterjs/slides/blob/master/meetup=46/speech=mol-style.pdf
react+cordova=🤎 *
	title \Cordova + React = 🤎
	description \Расскажу про то, как выглядит сегодня старенькая cordova, и что можно получить, если совместить ее с современными технологиями.
	speaker \recFFfDnmdRM5Sybp
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=47/speech=react+cordova=%F0%9F%A4%8E.pdf
neural-networks-on-js *
	title \Нейронные сети в JS: А зачем?
	description \Расскажу про общее состояние нейронных сетей на данный момент. Как язык и инфраструктура JavaScript — прекрасный инструмент для выполнения задач последней мили в нейронных сетях. Возможные варианты развития JS в сфере применения нейронных сетей.
	speaker \recNuTExXo6paisad
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=47/speech=neural-networks-on-js.pdf
tree-single-ast-to-rule *
	title \Tree — единый AST чтобы править всеми
	description \Вместе со слушателями проанализируем существующие текстовые форматы данных и с нуля спроектируем новый, лишённый уже привычных нам всем недостатков.
	speaker \rec1qqsT1cczrE6dH
	duration \PT30m
	slides \https://github.com/piterjs/slides/blob/master/meetup=47/speech=tree-single-ast-to-rule.pdf
legal-risks-in-it *
	title \Юридические риски для программиста
	description \Расскажу про использование кода из открытых библиотек: правовое регулирование, про систему контроля версий и отношения с работодателем.
	speaker \klimenkovyan
	duration \PT40m
	slides \https://github.com/piterjs/slides/blob/master/meetup=48/speech=legal-risks-in-it.pdf
game-with-firebase *
	title \Пишем многопользовательскую игру с помощью Firebase
	description \В этом докладе я напишу с нуля многопользовательскую игру с использованием сервисов Firebase. В результате вы узнаете как использовать удаленную базу данных Firestore, добавить аутентификацию через сторонние сервисы и загрузить результат в Firebase Hosting. Если боги лайв-кодинга будут благосклонны, то и поучаствуете в турнире по каменьножицебумаге 🔥
	speaker \kirjs
	duration \PT40m
node-debugger *
	title \Отлаживаем Node.js в Chrome DevTools максимально удобно
	description \В докладе я покажу в работе экспериментальный Node.js отладчик — ndb, построенный на основе Chrome DevTools. Как он может экономить ваше время, почему мы когда-то решили его делать, как оно все устроено внутри, и как вы можете помочь этому проекту.
	speaker \kozlyatinskiya
	duration \PT30m
	slides \https://github.com/piterjs/slides/blob/master/meetup=48/speech=node-debugger.pdf
piterjs-history *
	title \PiterJS: как это было и как будет
	description \
		\Всё имеет начало. Когда-то горстка энтузиастов, захваченная идеей свободных знаний, начала делать события, посвящённые JS и смежным технологиям, встречаться с первыми трудностями, учиться договариваться, мириться с сообществом питонистов, расти и искать себе смену среди других людей с горящими глазами.
		\Это лёгкая и наполненная забавными случаями история развития JS сообщества, рассказанная человеком, который был в нём с самого начала.
	speaker \alexkorotaev
	duration \PT60m
	- \ 35+10+15
js-tapki-fullstack *
	title \JS и тапки незрячего fullstack
	description \
		\JS — развязный язык. С его помощью делают продукты: от интерфейсов сайтов до космических аппаратов, им можно перенести данные из базы в базу без простоя и настроить DevOps инфраструктуру.
		\Евгений расскажет о применении JS на примерах из своих кейсов: построения Infrastructure as code, технологиях K6, Arduino и Pulumi.
	speaker \evgenynekrasov
	duration \PT50m
	- \ 30+10
rust-node *
	title \Интеграция Rust в Node.js
	description \Зачем понадобился Rust в приложении на JS? Как интегрировать Rust на примере. Влияние Rust на JS.
	speaker \evelas
	duration \PT50m
	- \ 30+10+10
